@model Travel_Agency___Data.ViewModels.PasswordViewModel

<div class="form-group position-relative">
    <label asp-for="Password" class="control-label">
        @(TempData["PasswordChange"] != null ? "New Password" : "Password")
    </label>
    <input asp-for="Password" class="form-control position-relative" type="password" id="password" />
    <span class="position-absolute" style="right: 3%;top: 49%;">
        <i class="fas fa-eye" id="eye-icon-password" onclick="togglePasswordVisibility('password', this)"></i>
    </span>
    <span asp-validation-for="Password" class="text-danger"></span>
</div>
<ul id="password-criteria" class="list-unstyled mt-2">
    <li id="length"><i class="fas fa-times-circle text-danger"></i> Minimum 8 characters</li>
    <li id="uppercase"><i class="fas fa-times-circle text-danger"></i> One uppercase letter</li>
    <li id="digit"><i class="fas fa-times-circle text-danger"></i> One number</li>
    <li id="special"><i class="fas fa-times-circle text-danger"></i> One special character</li>
</ul>

<div class="form-group position-relative">
    <label asp-for="ConfirmPassword" class="control-label">
        @(TempData["PasswordChange"] != null ? "Confirm New Password" : "Confirm Password")
    </label>
    <input asp-for="ConfirmPassword" class="form-control position-relative" type="password" id="confirm-password" />
    <span class="position-absolute" style="right: 3%;top: 49%;">
        <i class="fas fa-eye" id="eye-icon-confirm-password" onclick="togglePasswordVisibility('confirm-password', this)"></i>
    </span>
    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
</div>

<script>
    document.getElementById('password').addEventListener('input', function () {
        let regEx = new RegExp(/[ `!@@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?~]/);
        var password = this.value;
        var criteria = {
            length: password.length >= 8,
            uppercase: /[A-Z]/.test(password),
            digit: /[0-9]/.test(password),
            special: regEx.test(password)
        };

        for (var key in criteria) {
            var element = document.getElementById(key);
            if (criteria[key]) {
                element.innerHTML = '<i class="fas fa-check-circle text-success"></i> ' + element.innerText.substring(element.innerText.indexOf(' ') + 1);
            } else {
                element.innerHTML = '<i class="fas fa-times-circle text-danger"></i> ' + element.innerText.substring(element.innerText.indexOf(' ') + 1);
            }
        }
    });

    document.getElementById('confirm-password').addEventListener('input', function () {
        var password = document.getElementById('password').value;
        var confirmPassword = this.value;
        var confirmPasswordValidation = document.querySelector('[data-valmsg-for="ConfirmPassword"]');

        if (password === confirmPassword) {
            confirmPasswordValidation.textContent = '';
        } else {
            confirmPasswordValidation.textContent = 'Passwords do not match';
        }
    });

    function togglePasswordVisibility(inputId, icon) {
        var inputField = document.getElementById(inputId);
        if (inputField.type === "password") {
            inputField.type = "text";
            icon.classList.remove("fa-eye");
            icon.classList.add("fa-eye-slash");
        } else {
            inputField.type = "password";
            icon.classList.remove("fa-eye-slash");
            icon.classList.add("fa-eye");
        }
    }
</script>